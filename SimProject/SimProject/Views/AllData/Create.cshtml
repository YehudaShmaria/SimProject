@model ProtocolSim.Sim

@{
    ViewBag.Title = "צור";
}


<h2 style="color:blue">צור רשימת נתונים חדשה לסים</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => model.Company_Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Company_Name, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.Company_Name, htmlAttributes: new { @class = "control-label col-md-2" })
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => model.PunNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PunNumber, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.PunNumber, htmlAttributes: new { @class = "control-label col-md-2" })
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => model.ImeiSim, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ImeiSim, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.ImeiSim, htmlAttributes: new { @class = "control-label col-md-2" })
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => model.Packageplan, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Packageplan, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.Packageplan, htmlAttributes: new { @class = "control-label col-md-2" })
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => model.Apn, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Apn, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.Apn, htmlAttributes: new { @class = "control-label col-md-2" })
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => model.Ip, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Ip, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.Ip, htmlAttributes: new { @class = "control-label col-md-2" })
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => model.Unitname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Unitname, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.Unitname, htmlAttributes: new { @class = "control-label col-md-2" })
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => model.DeviceName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DeviceName, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.DeviceName, htmlAttributes: new { @class = "control-label col-md-2" })
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => model.ImeiDevice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ImeiDevice, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.ImeiDevice, htmlAttributes: new { @class = "control-label col-md-2" })
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
    </div>

    <div class="text-center form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="צור" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("חזרה לרשימת כל הנתונים", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
